{
    "name": "stackscore-app",
    "version": "1.0.0",
    "private": true,
    "type": "module",
    "scripts": {
        "sanity": "node server/scripts/sanity.js",
        "seed": "node server/scripts/seed_xata.js",
        "seed:pg": "node server/scripts/seed_pg.js",
        "build:js": "esbuild scripts/plan.runtime.src.js --bundle --minify --sourcemap --outfile=public/assets/plan.runtime.js",
        "watch:js": "esbuild scripts/plan.runtime.src.js --bundle --minify --sourcemap --outfile=public/assets/plan.runtime.js --watch",
        "smoke:api": "curl -s http://localhost:3001/api/health && echo && curl -s 'http://localhost:3001/api/gpt-plan?stackKey=foundation'",
        "patch:foundation": "node server/scripts/patch_foundation_plan.js",
        "dev:api": "nodemon --watch server --ext js,json --signal SIGTERM server/index.js",
        "dev:web": "vite",
        "dev": "concurrently -n API,WEB -c green,cyan \"npm:dev:api\" \"npm:dev:web\"",
        "start:api": "NODE_ENV=production node server/index.js",
        "lint:case": "git ls-files src/pages | grep -E '[A-Z].*\\.jsx$' && (echo '❌ Case issue found in src/pages (uppercase JSX filename)'; exit 1) || echo '✅ case clean')",
        "lint:imports-case": "git grep -nE 'from \\\"\\./pages/.*[A-Z]' src && (echo '❌ Uppercase import path found'; exit 1) || echo '✅ imports case clean')",
        "prebuild": "npm run lint:case && npm run lint:imports-case",
        "generate-safelist": "node scripts/generate-safelist.mjs",
        "prebuild:css": "node scripts/generate-safelist.mjs",
        "css:dev": "tailwindcss -i ./assets/app.src.css -o ./public/assets/app.css --watch --minify --content './public/**/*.html' --content './public/templates/**/*.mustache' --content './server/templates/**/*.mustache' --content './src/**/*.{html,js,jsx,ts,tsx}' --content './**/*.{html,js,jsx,ts,tsx,mustache}' --content '!./node_modules/**/*' --content '!./dist/**/*'",
        "css:build": "tailwindcss -i ./assets/app.src.css -o ./public/assets/app.css --minify --content './public/**/*.html' --content './public/templates/**/*.mustache' --content './server/templates/**/*.mustache' --content './src/**/*.{html,js,jsx,ts,tsx}' --content './**/*.{html,js,jsx,ts,tsx,mustache}' --content '!./node_modules/**/*' --content '!./dist/**/*'",
        "build": "npm run prebuild:css && npm run css:build && npm run build:guide && vite build",
        "build:guide": "scripts/bin/tailwindcss -i public/assets/guide.src.css -o public/assets/guide.css --minify",
        "watch:guide": "scripts/bin/tailwindcss -i public/assets/guide.src.css -o public/assets/guide.css --watch",
        "preview": "vite preview",
        "plan:json:elite": "curl -sS -X POST http://localhost:3001/api/gpt-plan -H \"Content-Type: application/json\" -d '{\"stackKey\":\"elite\"}' | tee plan.json",
        "plan:json:accelerator": "curl -sS -X POST http://localhost:3001/api/gpt-plan -H \"Content-Type: application/json\" -d '{\"stackKey\":\"accelerator\"}' | tee plan.json",
        "plan:json:growth": "curl -sS -X POST http://localhost:3001/api/gpt-plan -H \"Content-Type: application/json\" -d '{\"stackKey\":\"growth\"}' | tee plan.json",
        "plan:json:foundation": "curl -sS -X POST http://localhost:3001/api/gpt-plan -H \"Content-Type: application/json\" -d '{\"stackKey\":\"foundation\"}' | tee plan.json",
        "plan:pdf": "curl -sS -X POST http://localhost:3001/api/plan/pdf -H \"Content-Type: application/json\" --data-binary @plan.json -o StackScore-plan.pdf && (open StackScore-plan.pdf || true)",
        "plan:pdf:elite": "curl -sS -X POST http://localhost:3001/api/plan/pdf -H \"Content-Type: application/json\" --data-binary @plan.json -o StackScore-elite.pdf && (open StackScore-elite.pdf || true)",
        "plan:pdf:accelerator": "curl -sS -X POST http://localhost:3001/api/plan/pdf -H \"Content-Type: application/json\" --data-binary @plan.json -o StackScore-accelerator.pdf && (open StackScore-accelerator.pdf || true)",
        "plan:pdf:growth": "curl -sS -X POST http://localhost:3001/api/plan/pdf -H \"Content-Type: application/json\" --data-binary @plan.json -o StackScore-growth.pdf && (open StackScore-growth.pdf || true)",
        "plan:pdf:foundation": "curl -sS -X POST http://localhost:3001/api/plan/pdf -H \"Content-Type: application/json\" --data-binary @plan.json -o StackScore-foundation.pdf && (open StackScore-foundation.pdf || true)",
        "test:pdf:elite": "npm run plan:json:elite && npm run plan:pdf:elite",
        "test:pdf:accelerator": "npm run plan:json:accelerator && npm run plan:pdf:accelerator",
        "test:pdf:growth": "npm run plan:json:growth && npm run plan:pdf:growth",
        "test:pdf:foundation": "npm run plan:json:foundation && npm run plan:pdf:foundation",
        "dev:api:chrome": "PUPPETEER_EXECUTABLE_PATH='/Applications/Google Chrome.app/Contents/MacOS/Google Chrome' nodemon --watch server --ext js,json --signal SIGTERM server/index.js",
        "tw:bin": "mkdir -p scripts/bin && ARCH=$(uname -m) && OS=$(uname -s) && if [ \"$OS\" = \"Darwin\" ]; then if [ \"$ARCH\" = \"arm64\" ]; then URL=https://github.com/tailwindlabs/tailwindcss/releases/download/v4.1.12/tailwindcss-macos-arm64; else URL=https://github.com/tailwindlabs/tailwindcss/releases/download/v4.1.12/tailwindcss-macos-x64; fi; else URL=https://github.com/tailwindlabs/tailwindcss/releases/download/v4.1.12/tailwindcss-linux-x64; fi; curl -L -o scripts/bin/tailwindcss \"$URL\" && chmod +x scripts/bin/tailwindcss && (xattr -d com.apple.quarantine scripts/bin/tailwindcss 2>/dev/null || true)",
        "tw:verify": "scripts/bin/tailwindcss -v",
        "build:pdfcss": "scripts/bin/tailwindcss -i ./public/templates/input.css -o ./public/templates/stack.css --minify --content ./public/templates/stacktemplate.html",
        "postinstall": "npm run tw:bin && npm run tw:verify"
    },
    "dependencies": {
        "@aws-sdk/client-s3": "^3.873.0",
        "@aws-sdk/s3-request-presigner": "^3.873.0",
        "@sparticuz/chromium": "^138.0.2",
        "@xata.io/client": "^0.30.1",
        "compression": "^1.8.1",
        "cookie-parser": "^1.4.7",
        "cors": "^2.8.5",
        "dotenv": "^17.2.1",
        "express": "^4.21.2",
        "express-rate-limit": "^8.0.1",
        "handlebars": "^4.7.8",
        "helmet": "^8.1.0",
        "lucide": "^0.542.0",
        "lucide-react": "^0.540.0",
        "mustache": "^4.2.0",
        "mustache-express": "^1.3.2",
        "node-fetch": "^3.3.2",
        "openai": "^5.15.0",
        "pdf-lib": "^1.17.1",
        "pg": "^8.16.3",
        "puppeteer-core": "^24.17.0",
        "react": "^18.3.1",
        "react-dom": "^18.3.1",
        "react-router-dom": "^7.8.0",
        "stripe": "^18.4.0",
        "uuid": "^11.1.0",
        "zod": "^3.25.76"
    },
    "devDependencies": {
        "@fontsource/inter": "^5.2.6",
        "@tailwindcss/cli": "^4.1.13",
        "@tailwindcss/postcss": "^4.1.13",
        "@tailwindcss/vite": "^4.1.13",
        "@vitejs/plugin-react": "^4.7.0",
        "@xata.io/cli": "^0.16.12",
        "autoprefixer": "^10.4.21",
        "concurrently": "^9.2.1",
        "esbuild": "^0.25.10",
        "nodemon": "^3.1.10",
        "postcss": "^8.5.6",
        "puppeteer": "^24.17.0",
        "tailwindcss": "^4.1.13",
        "vite": "^5.4.19"
    },
    "engines": {
        "node": ">=18.18",
        "npm": ">=9"
    }
}
